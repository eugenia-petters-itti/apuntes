version: '3.8'

services:
  postgres-db:
    image: postgres:15
    container_name: escenario-postgres
    environment:
      POSTGRES_DB: training_db
      POSTGRES_USER: app_user
      POSTGRES_PASSWORD: app_pass
    ports:
      - "5432:5432"
    volumes:
      - ./init-scripts:/docker-entrypoint-initdb.d
    networks:
      - db-network

  simulator:
    build: ./simuladores
    container_name: escenario-simulator
    depends_on:
      - postgres-db
    environment:
      DB_HOST: postgres-db
      DB_USER: app_user
      DB_PASS: app_pass
      DB_NAME: training_db
    networks:
      - db-network

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus:/etc/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    networks:
      - db-network

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - ./grafana/datasources:/etc/grafana/provisioning/datasources
      - ./grafana/dashboards:/etc/grafana/provisioning/dashboards
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
    networks:
      - db-network

  postgres-exporter:
    image: prometheuscommunity/postgres-exporter:latest
    container_name: postgres-exporter
    ports:
      - "9187:9187"
    environment:
      - DATA_SOURCE_NAME=postgresql://app_user:app_pass@postgres-db:5432/training_db?sslmode=disable
    depends_on:
      - postgres-db
    networks:
      - db-network

networks:
  db-network:
    driver: bridge
